This document assumes that you have obtained the Javolin build environment from
the CVS repository at SourceForge.net, and wish to build Javolin or Testbench.

------------
Requirements
------------
To build Javolin, you need:
- Java 1.4.1 or higher. 
- Apache Ant; see http://ant.apache.org/ for info and download
- Various third party libraries on which Javolin depends. See the "Libraries"
section below before attempting to build Javolin.

--------
Building
--------
Currently Apache Ant is used for building Javolin. The build.xml file specifies
several commands. To invoke a command, simply execute:

ant command

at the command line, where "command" is the desired command. The following
commands are available:

  archive - Compiles Javolin and builds the Javolin.jar file. This is the
      default, so you can just execute "ant" by itself, without specifying a
      command.

  libarchive - Compiles and builds Javolin.jar, containing all the third
      party libraries needed for it to run. Use this version to create a
      Javolin for public release.

  testbench - Compiles Testbench and builds the Testbench.jar file.

  doc - Uses Javadoc to generate Javolin API documentation in a directory 
      called "doc".

  all - builds archive, testbench, doc.

  clean - Deletes everything created by the other commands: the build 
      directory, the doc directory, and the jar files.

---------
Libraries
---------

Javolin relies on third party libraries. If you don't have these libraries, you
cannot build or run Javolin. Most of these libraries are not checked in to the
CVS repository, so you must download them and place them into the lib directory
yourself. The following is a list of the libraries currently used, along with
URLs pointing to the download location of the version currently being developed
against. The Lib file(s) item tells you what file or files must be copied into
the lib directory so that Javolin can be compiled and run. (Please keep this
list up-to-date when new library dependencies are added to Javolin, as well as
when we move to a new version of a library that we are already using.)

---
Name: Smack (modified version in Volity CVS)
Home page: http://www.jivesoftware.org/smack/
Version: 2.0.0-v-1
Download: https://sourceforge.net/project/showfiles.php?group_id=91751 (the smack-volity package)
Lib files: smack.jar, smackx.jar
---
Name: Rhino
Home page: http://www.mozilla.org/rhino/
Version: 1.5R5
Download: ftp://ftp.mozilla.org/pub/mozilla.org/js/rhino1_5R5.zip
Lib file: js.jar
---
Name: Batik
Home page: http://xml.apache.org/batik/
Version: 1.6
Download: svn checkout -r 379046 http://svn.apache.org/repos/asf/xmlgraphics/batik/trunk
    (The "-r 379046" fetches the source as of 2006-Feb-20, which works with
    the current Javolin source.)
    % cd trunk
    % setenv JAVA_HOME /usr
    (Set JAVA_HOME so that $JAVA_HOME/bin/java points to your java runtime.
    The line above is correct for MacOSX.)
    % sh build.sh all-jar
Lib files: batik-all.jar, xerces_2_5_0.jar, xml-apis-dom3.jar
    (We know this to throw warnings but still build successfully with Java 1.4.2.
    After building, batik-all.jar will be in the batik-1.6/lib directory; 
    xerces_2_5_0.jar and xml-apis-dom3.jar are in the lib directory.)
Comments: If you were building the previous version of Javolin, be sure to
    delete batik-*.jar and xml-apis.jar from your lib directory before
    installing the current Batik libs.
    If you want to save space, you can delete the directories test-resources,
    test-sources, test-references, samples from the Batik source tree.
    Note that Batik 1.6 includes version 1.5R4.1 of Rhino (js.jar), but
    Javolin needs 1.5R5 instead.
---
Name: Flying Saucer (xhtmlrenderer)
Home page: https://xhtmlrenderer.dev.java.net/
Version: R5 beta
Download: http://joshy.org/flyingsaucer/downloads/flyingsaucer.src.zip
    (Then, after unpacking the source...)
    % ant jar
Lib files: core-renderer.jar, cssparser-0-9-4-fs.jar
    (After the "ant jar" command, core-renderer.jar will be in the build
    directory; cssparser-0-9-4-fs.jar is in the lib directory.)
Comments: You might want to delete the "System.out.println()" call from 
    line 185 of src/java/org/xhtmlrenderer/util/Configuration.java. It is
    unsightly.
---
Name: MP3SPI
Home page: http://www.javazoom.net/mp3spi/mp3spi.html
Version: 1.9.4
Download: http://www.javazoom.net/mp3spi/sources/mp3spi1.9.4.tar.gz
Lib files: mp3spi1.9.4.jar, jl1.0.jar, tritonus_share.jar
    (mp3spi1.9.4.jar is at the top level of the distribution; jl1.0.jar 
    and tritonus_share.jar are in the lib directory.)
