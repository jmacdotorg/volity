<project name="Javolin" default="archive" basedir=".">
    <description>
        Build file for Javolin app
    </description>
  <!-- project-specific properties; change these -->
  <property name="jarfilejavolin" value="Javolin.jar"/>
  <property name="jarfiletestbench" value="Testbench.jar"/>
  <!-- set global properties for this build -->
  <property name="src" location="source"/>
  <property name="build" location="build"/>
  <property name="doc" location="doc"/>
  <property name="lib.loc" location="lib"/>
  <!-- define class path -->
  <path id="class.path">
    <fileset dir="lib">
        <include name="*.jar"/>
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="class.path"
      deprecation="on" debug="on" source="1.4">
      <include name="org/volity/javolin/**/*.java" />
      <include name="org/volity/client/**/*.java" />
      <include name="org/volity/jabber/**/*.java" />
    </javac>
    <!-- Copy all .png files from ${src} to ${build}-->
    <copy todir="${build}">
      <fileset dir="${src}">
        <include name="**/*.png"/> 
      </fileset>
    </copy> 
  </target>

  <target name="compiletestbench" depends="init, compile"
        description="compile the source" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="class.path"
      deprecation="on" debug="on" source="1.4">
      <include name="org/volity/testbench/**/*.java" />
    </javac>
  </target>

  <target name="archive" depends="compile"
        description="generate the jar file" >
    <property name="mainclass" value="org/volity/javolin/JavolinApp"/>
    <!-- Transform classpath into space-separated list for manifest -->
    <pathconvert dirsep="/" pathsep=" " property="manif.cpath" 
      refid="class.path">
      <map from="${lib.loc}" to="lib"/>
    </pathconvert>
    <!-- Put some of ${build} into the ${jarfile} file -->
    <jar jarfile="${jarfilejavolin}" basedir="${build}">
      <include name="org/volity/javolin/" />
      <include name="org/volity/client/" />
      <include name="org/volity/jabber/" />
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Class-Path" value="${manif.cpath}"/>        
      </manifest> 
    </jar>
  </target>
  
  <target name="testbench" depends="compiletestbench"
        description="generate the jar file" >
    <property name="mainclass" value="org/volity/testbench/TestbenchApp"/>
    <!-- Transform classpath into space-separated list for manifest -->
    <pathconvert dirsep="/" pathsep=" " property="manif.cpath" 
      refid="class.path">
      <map from="${lib.loc}" to="lib"/>
    </pathconvert>
    <!-- Put everything in ${build} into the ${jarfile} file -->
    <jar jarfile="${jarfiletestbench}" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Class-Path" value="${manif.cpath}"/>        
      </manifest> 
    </jar>
  </target>
  
  <target name="doc"
        description="generate Javadocs" >
    <javadoc destdir="${doc}" classpathref="class.path" 
      windowtitle="Javolin API" source="1.4">
      <packageset dir="${src}"/>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
      <link href="http://xml.apache.org/batik/javadoc/"/>
      <link href="http://www.mozilla.org/rhino/apidocs/"/>
      <link href="http://www.jivesoftware.org/builds/smack/docs/1.5.1/javadoc/"/>
    </javadoc>
  </target>

  <target name="all" depends="archive, testbench, doc"
        description="build all targets" >
    <!-- Build everything -->
  </target>

  <target name="clean" depends="cleanbuild"
        description="clean up" >
    <!-- Delete the docs, the ${build} directory tree, and the .jar files -->
    <delete dir="${doc}"/>    
  </target>

  <target name="cleanbuild"
        description="clean up all but doc tree" >
    <!-- Delete the ${build} directory tree and .jar file -->
    <delete dir="${build}"/>
    <delete file="${jarfilejavolin}"/>
    <delete file="${jarfiletestbench}"/>
  </target>

  <target name="libarchive" description="generate the jar file, including third-party libs" depends="compile">
    <unzip src="${lib.loc}/smack.jar" dest="${build}"/>
    <unzip src="${lib.loc}/smackx.jar" dest="${build}"/>
    <unzip src="${lib.loc}/js.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-awt-util.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-bridge.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-css.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-dom.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-ext.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-gui-util.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-gvt.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-parser.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-script.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-svg-dom.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-swing.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-util.jar" dest="${build}"/>
    <unzip src="${lib.loc}/batik-xml.jar" dest="${build}"/>
    <unzip src="${lib.loc}/xerces_2_5_0.jar" dest="${build}"/>
    <unzip src="${lib.loc}/xml-apis.jar" dest="${build}"/>
    <property name="mainclass" value="org/volity/javolin/JavolinApp"/>
    <!-- Put some of ${build} into the ${jarfile} file -->
    <jar jarfile="${jarfilejavolin}" basedir="${build}">
      <include name="org/volity/javolin/" />
      <include name="org/volity/client/" />
      <include name="org/volity/jabber/" />
      <include name="org/jivesoftware/" />
      <include name="org/xmlpull/" />
      <include name="org/apache/" />
      <include name="org/mozilla/" />
      <include name="org/w3c/" />
      <include name="org/xml/" />
      <include name="javax/" />
      <metainf dir="${build}/META-INF">
        <exclude name="MANIFEST.MF" />
      </metainf>
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
      </manifest> 
    </jar>
  </target>

</project>
