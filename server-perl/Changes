0.3.5

	- Expanded the Bot base class's usefulness.

 	- Made service disocvery support actually work.

	- Nice, configurable logging is now supported throughout the
	  modules. As a result, the module now requires the Log::Log4perl
	  module as an installation prerequisite.

	- The game server daemon program is now named volityd, not
      	  server.pl. And it's documented! And supports logging!
	
0.3.0

	- Added support for bot invitations.

	- Greater support for forms in Volity::Jabber.
	
	- Added send_presence method to Volity::Jabber.

	- Volity::Server objects now listen for incoming presence
          subscriptions, and automatically approve of them.

	- Rewrote and renamed the text client. It's now 'Friv', under
          the executable 'friv'.

	- Added basic roster, service discovery support, and user
	  regsitration to Volity::Jabber.

	- Added (most of) the above to Friv, too.

	- Implemented support for ECMAScript throughout Friv and the
	  server modules. Friv now requires the JavaScript::SpiderMonnkey
	  module.

	- All RPC calls are now in either the 'volity.*' or 'game.*'
          namespaces.

	- Rewrote lots of low-level stuff in Volity::Jabber and
          elsewhere to cope with API change to the new (tentative v1.0)
          pre-release version of POE::Component::Jabber.

0.2.2

	- (distribution) Improved the test.pl script. It now more
          properly takes advantage of Test::More's abilities, and is
          easier to extend.

	- More cruft removal from Game.pm, Server.pm.

	- Fixed a bug in Volity::Jabber that prevented it from opening
          connections to remote servers correctly (!) (The call to
          POE::Component::Jabber's constructor lacked sufficient
          information.)

	- Eliminated dependency of my silly, non-CPAN Class::Accessor::Fields
	  module, and added dependency on CPAN's Class::Fields. This is better,
	  though it still means that pseudohashes are being used for now.

0.2.1
	- Servers now keep track of referees they create, and provide the
	  appropriate accessor methods. A server that receives a 'stop'
	  message will pass this along to its referees.

	- Added a 'stop' method to Server and Referee classes.

	- Added lots of POD docs throughout the package.

	- Added this Changes file to the package!

	- Added a test suite, which can be run through the 'test' command
       	  of the Build script.

	- Rubbed out various hardcoded settings in Server and Referee.

	- Changed messy debug print()s into debug() method calls.

	- Added (unfortunately) "no warnings(deprecated)" to suppress
	  whinging about bad pseudohashes. We'll eject phashes later.

	- Volity::Game now inherits from Class::Data::Inheritable, and is
	  now the place to set game configuration information such as the
	  game's URI and allowed player range.
	
