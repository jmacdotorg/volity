--- WHAT IS THIS? ---

Frivolity is a free, Perl-based reference implementation of the Volity
platform for Internet-based game play. It is released under the LGPL
open-source license. (See the accompanying LICENSE file.)

This release offers some embedded POD documentation. However, you can
find a more complete reference on the Web, here:

http://www.volity.org/docs/devguide_perl/

This release will probably be of little use to anyone but the core
Volity development team, and the handful of friends who have elected
to try programming the platform's first few "third-party" game
modules. Their feedback is sure to make future releases more mature,
and of wider reach.

For more information about Volity:
Volity Developers' Site:
http://www.volity.org

Volity at SourceForge:
http://volity.sf.net

If, after learning a bit about Volity, you'd like to try your hand at
being a pioneering game developer during these the platform's early
days, do drop me a line: jmac@jmac.org.

--- PREREQUISITES ---

Frivolity requires several Perl modules to work; the Build script
checks for their presence on your system. All are available from CPAN,
except for the following special exception:

* POE::Filter::XML::Node v0.24

I have made some slight modifications to Nick Perez's excellent XML
node module, which have not (at the time of this writing) been merged
into its CPAN-release version. Please download and install my version,
available here:

http://volity.org/projects/frivolity/POE-Filter-XML-0.24.tar.gz

--- INSTALLATION ---

This package uses the Module::Build installation style.

It will, by default, install several Perl modules into your
site-perl location under the Volity namespace, and place a server
script (server.pl) and a command-line client (friv) in
/usr/local/volity/bin. If these locations do not suit you, edit Build.PL
appropriately. (See the Module::Build manpage for instructions on
modifying this file.)

Once you've set up things as you liked it (or decided you are happy
with the defaults, which is likely), you should be able to create the
build script like so:

 perl Build.PL

 ./Build

 ./Build test

You'll note there's not much in the way of testing now... it just
makes sure everything compiles. We will add some nice test suites in
the near future.

 sudo ./Build install

--- TESTING YOUR INSTALLATION WITH A SAMPLE GAME ---

While no automated testing exists yet, you can manually test your
installation by attempting to play a game of rock-paper-scissors using
Friv, a text-based Volity client included with this distribution. Friv
is located locally in bin/friv, and is installed into wherever you
specified the Build script to place scripts; by default it goes into
/usr/local/volity/bin/.

Using a valid Jabber username, host, and password, run Friv like so:

 friv -u [username] -h [host] -p [password]

Upon connection, issue the following series of commands to Friv's prompt:

> new_table rps@volity.net/volity
> add_bot
> start_game
> select rock

As you do so, you should witness an entire game of rock-paper-scissors
occur between you and an automated opponent. (In fact, it should look
rather like the "SYNOPSIS" section of Friv's manpage.) If everything
looks good, congratulations; your Frivolity installation seems to be a
success! (And you can continue issuing "start_game" and "select
[hand-shape]" commands for as long as you'd like.) If something goes
wrong, please notify either me or the mailing list (see below).

--- CONTACT ---

Please send all questions, comments, bug reports, etc. to Jason
McIntosh <jmac@jmac.org>.

For community discussion about these modules, see the volity-devel
mailing list:
<http://lists.sourceforge.net/lists/listinfo/volity-devel>. Its
archives are on the Web, and offers open subscription to all.
